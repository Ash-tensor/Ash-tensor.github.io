<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-01-17T17:46:42+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Tensor Studio</title><subtitle>텐서 스튜디오</subtitle><author><name>ash tensor</name></author><entry><title type="html">[자바][자료구조] T 메모리구조</title><link href="http://localhost:4000/java/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/2024/01/17/tMemoryJava.html" rel="alternate" type="text/html" title="[자바][자료구조] T 메모리구조" /><published>2024-01-17T00:00:00+09:00</published><updated>2024-01-17T00:00:00+09:00</updated><id>http://localhost:4000/java/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/2024/01/17/tMemoryJava</id><content type="html" xml:base="http://localhost:4000/java/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/2024/01/17/tMemoryJava.html"><![CDATA[<h1 id="자바자료구조-t-메모리구조">[자바][자료구조] T 메모리구조</h1>

<p><img src="/img/posts/JAVA/TMemorySample.png" style="display: block; margin-left: auto; margin-right: auto; width: 100%" /></p>

<h2 id="mainjava">Main.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">tmemorysample</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="no">SAMPLE_INTEGER_A</span> <span class="o">=</span> <span class="mi">5</span><span class="o">;</span>
    <span class="kd">static</span> <span class="kt">int</span> <span class="no">SAMPLE_INTEGER_B</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">fact</span><span class="o">(</span><span class="kt">int</span> <span class="n">target</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">target</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">target</span> <span class="o">*</span> <span class="n">fact</span><span class="o">(</span><span class="n">target</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
            <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">sample</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="n">sample</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="no">SAMPLE_INTEGER_A</span><span class="o">);</span>
        <span class="n">sample</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="no">SAMPLE_INTEGER_B</span><span class="o">);</span>

        <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="nc">SolveA</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sample</span><span class="o">);</span>

        <span class="nc">SolveB</span> <span class="n">solveB</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SolveB</span><span class="o">();</span>
        <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="n">solveB</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">sample</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="o">&gt;=</span> <span class="no">SAMPLE_INTEGER_A</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">fact</span><span class="o">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">));</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
<span class="kd">class</span> <span class="nc">SolveA</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">a</span><span class="o">){</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">a</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">a</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="solvebjava">SolveB.java</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">tmemorysample</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SolveB</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">add</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Integer</span><span class="o">&gt;</span> <span class="n">a</span><span class="o">){</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">a</span><span class="o">.</span><span class="na">size</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="n">answer</span> <span class="o">+=</span> <span class="n">a</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>]]></content><author><name>ash tensor</name></author><category term="JAVA" /><category term="자료구조" /><summary type="html"><![CDATA[[자바][자료구조] T 메모리구조]]></summary></entry><entry><title type="html">[깃허브 블로그] 동일 카테고리의 최근 글 기능 개발(clean blog theme)</title><link href="http://localhost:4000/%EA%B9%83%ED%97%88%EB%B8%8C/2024/01/17/bottom-category-build.html" rel="alternate" type="text/html" title="[깃허브 블로그] 동일 카테고리의 최근 글 기능 개발(clean blog theme)" /><published>2024-01-17T00:00:00+09:00</published><updated>2024-01-17T00:00:00+09:00</updated><id>http://localhost:4000/%EA%B9%83%ED%97%88%EB%B8%8C/2024/01/17/bottom-category-build</id><content type="html" xml:base="http://localhost:4000/%EA%B9%83%ED%97%88%EB%B8%8C/2024/01/17/bottom-category-build.html"><![CDATA[<h2 id="동일-카테고리의-최근-글-기능">동일 카테고리의 최근 글 기능</h2>

<p><img src="/img/posts/clean-blog-setup/18.png" style="display: block; margin-left: auto; margin-right: auto; width: 80%" /></p>

<p>사진을 보면 이해가 아주 쉬울텐데
티스토리 블로그나 네이버 블로그 모두, 블로그 하단부에는 최근 동일 카테고리의 글 몇개를 보여주는 기능이 존재한다(정확히 무슨 이름인지는 모르겠다). 상황에 따라 전부 보여주기도 하고, 최근 글 몇개만 보여주기도 한다. 아마 잘은 모르겠지만 blogger나 wordpress 모두 동일할 것이다. 나도 그런 블로그에 익숙해서인지 모르겠지만 NavBar에 카테고리를 추가하기도 하고, 헤더 부분과 본문에 카테고리 링크를 표시하는 기능을 추가하기도 했는데 아무리 그래도 블로그에 이 기능이 없으면 허전하다고 느꼈고, 리퀴드 / html에 익숙해지기도 했고 해서, 이렇게 추가하게 되었다.</p>

<h3 id="코드">코드</h3>

<p>post.markdown 파일을 수정하면 된다. 나는 댓글창 위에 있는게 편해서 if page.comments 부분 위에 추가했는데 본인이 불편하지 않은 곳 어디든 추가하면 된다. 당연히 기존 코드 구조를 해치지 않는 선에서.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
&lt;ul class="row mb-5 "&gt;
{% assign firstCategory = page.categories | first %}
&lt;p&gt;
    &lt;a style= "font-size: 20px; font-weight: bold;" href= "{{ site.url }}/category/{{ firstCategory }}.html"&gt;
    {{ firstCategory }} 카테고리의 다른 글
    &lt;/a&gt;
&lt;/p&gt;
{% assign posts = site.categories[firstCategory] | sort: 'date' | reverse | limit: 5 %}
{% assign counter = 0 %}
{% for post in posts %}
    {% if counter &lt; 5 %}
    
    &lt;li&gt;
        &lt;h3&gt;
        &lt;a href="{{ site.baseurl }}{{ post.url }}" style= "font-size: 20px;"&gt;
            {{ post.title }}
        &lt;/a&gt;
        &lt;small style= "font-size: 20px;"&gt;{{ post.date | date_to_string }}&lt;/small&gt;
        &lt;/h3&gt;
    &lt;/li&gt;
    {% assign counter = counter | plus: 1 %}
    {% endif %}
{% endfor %}
&lt;/ul&gt;


</code></pre></div></div>

<h3 id="설명">설명</h3>

<p>지킬에서 사용하는 리퀴드 언어에서는 assign을 이용해서 변수를 할당한다. 이건 자바스크립트와 조금 비슷한 것 같다. 그래서 코드를 살펴보면  firstCategory라는 변수에 page의 categories의 첫번째 카테고리를 할당한다. 여기서 page.categories라는 리스트는 프론트매터의 categoris: xxx에 해당하는 부분이다.</p>

<p><img src="/img/posts/clean-blog-setup/19.png" style="display: block; margin-left: auto; margin-right: auto; width: 80%" /></p>

<p>바로 이 부분.</p>

<p>당연하겠지만 이 기능은 첫번째 카테고리의 내용만을 표시한다. 카테고리에는 여러개의 카테고리를 할당할 수는 있지만 보여주는건 하나뿐이다. 아무래도 여러개를 보여주면 너무 헷갈리지 않을까 싶어서 이렇게 설정했다. 리퀴드에서는 파이썬의 for문과 똑같이 for x in xlist 구조의 향상된 순회가 가능하다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% assign posts = site.categories[firstCategory] | sort: 'date' | reverse | limit: 5 %}
{% assign counter = 0 %}
{% for post in posts %}
    {% if counter &lt; 5 %}
    
    &lt;li&gt;
        &lt;h3&gt;
        &lt;a href="{{ site.baseurl }}{{ post.url }}" style= "font-size: 20px;"&gt;
            {{ post.title }}
        &lt;/a&gt;
        &lt;small style= "font-size: 20px;"&gt;{{ post.date | date_to_string }}&lt;/small&gt;
        &lt;/h3&gt;
    &lt;/li&gt;
    {% assign counter = counter | plus: 1 %}
    {% endif %}
{% endfor %}
</code></pre></div></div>

<p>그리고 위 부분에서는 예전에 카테고리를 만들때 사용했던 코드를 응용했는데, 이해가 가지 않았던 점은 분명 <strong>limit: 5</strong>를 설정했는데 어떻게 해도 5개 이상으로 표시가 되어서 GPT에게도 물어봤지만 “코드는 정확해, 아무런 문제도 없어.” 라는 대답만 들을 수 있었다. 왜 그런지 잘 모르겠는데, 정렬 문제인가 싶어서 여러번 설정을 바꿔봤지만 그 문제는 아닌 것 같다. 어쩔 수 없이 그냥 for 문에 카운터를 설정해서 5개만 표시되도록 코드를 수정했다. « 이유 아는 사람 있으면 알려주시길</p>

<p>아무튼 수정한 결과 이 문단의 바로 아랫부분에 나오는 페이지를 완성할 수 있었다! CSS 스타일을 내가 처음부터 직접 만든 게 아니라 상당히 투박하기도 하고 모바일에서 어떻게 나올지는 잘 모르겠지만 일단 작동은 하긴 하니까, 여기에서 마무리 지어야겠다.</p>]]></content><author><name>ash tensor</name></author><category term="깃허브" /><summary type="html"><![CDATA[동일 카테고리의 최근 글 기능]]></summary></entry><entry><title type="html">[백준][PS] 회사에 있는 사람 :: 실버 5(자료구조)</title><link href="http://localhost:4000/ps/%EB%B0%B1%EC%A4%80/java/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/2024/01/17/coworkerInCompany.html" rel="alternate" type="text/html" title="[백준][PS] 회사에 있는 사람 :: 실버 5(자료구조)" /><published>2024-01-17T00:00:00+09:00</published><updated>2024-01-17T00:00:00+09:00</updated><id>http://localhost:4000/ps/%EB%B0%B1%EC%A4%80/java/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/2024/01/17/coworkerInCompany</id><content type="html" xml:base="http://localhost:4000/ps/%EB%B0%B1%EC%A4%80/java/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/2024/01/17/coworkerInCompany.html"><![CDATA[<h1 id="백준ps-회사에-있는-사람--실버-5자료구조">[백준][PS] 회사에 있는 사람 :: 실버 5(자료구조)</h1>

<h2 id="문제-설명">문제 설명</h2>

<p>상근이는 세계적인 소프트웨어 회사 기글에서 일한다. 이 회사의 가장 큰 특징은 자유로운 출퇴근 시간이다. 따라서, 직원들은 반드시 9시부터 6시까지 회사에 있지 않아도 된다.</p>

<p>각 직원은 자기가 원할 때 출근할 수 있고, 아무때나 퇴근할 수 있다.</p>

<p>상근이는 모든 사람의 출입카드 시스템의 로그를 가지고 있다. 이 로그는 어떤 사람이 회사에 들어왔는지, 나갔는지가 기록되어져 있다. 로그가 주어졌을 때, 현재 회사에 있는 모든 사람을 구하는 프로그램을 작성하시오.</p>

<p><strong>입력</strong></p>

<p>첫째 줄에 로그에 기록된 출입 기록의 수 n이 주어진다. (2 ≤ n ≤ 106) 다음 n개의 줄에는 출입 기록이 순서대로 주어지며, 각 사람의 이름이 주어지고 “enter”나 “leave”가 주어진다. “enter”인 경우는 출근, “leave”인 경우는 퇴근이다.</p>

<p>회사에는 동명이인이 없으며, 대소문자가 다른 경우에는 다른 이름이다. 사람들의 이름은 알파벳 대소문자로 구성된 5글자 이하의 문자열이다.</p>

<p><strong>출력</strong></p>

<p>현재 회사에 있는 사람의 이름을 사전 순의 역순으로 한 줄에 한 명씩 출력한다.</p>

<h2 id="제한시간">제한시간</h2>

<p>1초, 메모리제한 256MB</p>

<h3 id="접근-방법">접근 방법</h3>

<p>솔직히 엄청 쉬운 문제다. 누구나 구현할 수 있고, 전공자가 아니더라도 누구나 이 문제를 구현하는데는 문제가 없을 것이다. 맵 자료형을 써도 되고, 파이썬에서는 딕셔너리를 쓰거나, 해시 맵을 쓰거나, 집합 자료구조를 사용해도 문제는 무리 없이 풀린다. 하지만 자료구조에 대한 이해가 없이 배열과 같은 선형 자료구조를 사용하면 <strong>시간 초과</strong>를 마주치는 문제다. 개인적으로 이 문제는 좋은 문제라고 생각해서 가져왔다.</p>

<h4 id="잘못된-접근">잘못된 접근</h4>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">boj</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.lang.reflect.Array</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">boj7785</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">coworkerList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
        <span class="nc">Scanner</span> <span class="n">scanner</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">coworkerNumber</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">coworkerNumber</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">coworkerName</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            <span class="nc">String</span> <span class="n">sign</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">sign</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"enter"</span><span class="o">)){</span>
                <span class="n">coworkerList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">coworkerName</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="k">else</span> <span class="o">{</span>
               <span class="n">coworkerList</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">coworkerName</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="nc">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">coworkerList</span><span class="o">,</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">String</span> <span class="n">coworker</span> <span class="o">:</span> <span class="n">coworkerList</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">coworker</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>이렇게 풀어도 답은 문제없이 나온다. 하지만 시간초과로 문제 해결이 실패하게 된다. 구현방법을 보면 enter이면 ArrayList<String>에 동료의 이름을 집어 넣고, 만약에 leave라는 문자열을 마주치면 ArrayList에서 해당 문자열을 삭제한다.</String></p>

<p>여기서 문제가 발생하는데, 배열과 같은 선형 자료구조는 중간 노드의 삽입과 삭제가 빈번하게 일어날 때, 성능이 매우 나빠진다.</p>

<p>왜냐하면 연속된 메모리 공간에 요소들을 저장하고 있기 때문에 중간에 요소를 추가하거나, 삭제하면 해당 위치 이후의 모든 요소를 이동시켜야만 한다. 이런 경우에 노드의 추가와 삭제에 소요되는 시간 복잡도는 O(n)이 된다. 이렇게 추가적으로 시간이 매우 많이 소요되기 때문에 1초라는 시간으로는 문제를 풀이할 수 없다.</p>

<p>이런 경우에는 순서가 상관없는 자료구조로 문제를 풀이해야 한다. 대표적으로는 set 자료형이 있다. 다음은 HashSet 자료형으로 풀이한 자바 코드다.</p>

<h3 id="자바-풀이">자바 풀이</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">boj7785</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Set</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">coworkerSet</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashSet</span><span class="o">&lt;&gt;();</span>

        <span class="nc">Scanner</span> <span class="n">scanner</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
        <span class="kt">int</span> <span class="n">coworkerNumber</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>

        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">coworkerNumber</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="nc">String</span> <span class="n">coworkerName</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>
            <span class="nc">String</span> <span class="n">sign</span> <span class="o">=</span> <span class="n">scanner</span><span class="o">.</span><span class="na">next</span><span class="o">();</span>

            <span class="k">if</span> <span class="o">(</span><span class="n">sign</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">"enter"</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">coworkerSet</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">coworkerName</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="n">coworkerSet</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">coworkerName</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">coworkerList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;(</span><span class="n">coworkerSet</span><span class="o">);</span>
        <span class="nc">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">coworkerList</span><span class="o">,</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">reverseOrder</span><span class="o">());</span>

        <span class="k">for</span> <span class="o">(</span><span class="nc">String</span> <span class="n">coworker</span> <span class="o">:</span> <span class="n">coworkerList</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">coworker</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>ash tensor</name></author><category term="PS" /><category term="백준" /><category term="JAVA" /><category term="자료구조" /><summary type="html"><![CDATA[[백준][PS] 회사에 있는 사람 :: 실버 5(자료구조)]]></summary></entry><entry><title type="html">[프로그래머스][PS] 타겟 넘버 :: LEVEL 2 (DP 풀이)</title><link href="http://localhost:4000/ps/dp/%ED%8C%8C%EC%9D%B4%EC%8D%AC/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/java/2024/01/16/targetNumber.html" rel="alternate" type="text/html" title="[프로그래머스][PS] 타겟 넘버 :: LEVEL 2 (DP 풀이)" /><published>2024-01-16T00:00:00+09:00</published><updated>2024-01-16T00:00:00+09:00</updated><id>http://localhost:4000/ps/dp/%ED%8C%8C%EC%9D%B4%EC%8D%AC/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/java/2024/01/16/targetNumber</id><content type="html" xml:base="http://localhost:4000/ps/dp/%ED%8C%8C%EC%9D%B4%EC%8D%AC/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4/java/2024/01/16/targetNumber.html"><![CDATA[<h1 id="프로그래머스ps-타겟-넘버--level-2-dp-풀이">[프로그래머스][PS] 타겟 넘버 :: LEVEL 2 (DP 풀이)</h1>

<h2 id="문제-설명">문제 설명</h2>

<p>문제 설명
n개의 음이 아닌 정수들이 있습니다. 이 정수들을 순서를 바꾸지 않고 적절히 더하거나 빼서 타겟 넘버를 만들려고 합니다. 예를 들어 [1, 1, 1, 1, 1]로 숫자 3을 만들려면 다음 다섯 방법을 쓸 수 있습니다.</p>

<p>-1+1+1+1+1 = 3</p>

<p>+1-1+1+1+1 = 3</p>

<p>+1+1-1+1+1 = 3</p>

<p>+1+1+1-1+1 = 3</p>

<p>+1+1+1+1-1 = 3</p>

<p>사용할 수 있는 숫자가 담긴 배열 numbers, 타겟 넘버 target이 매개변수로 주어질 때 숫자를 적절히 더하고 빼서 타겟 넘버를 만드는 방법의 수를 return 하도록 solution 함수를 작성해주세요.</p>

<p><strong>제한사항</strong></p>

<ol>
  <li>주어지는 숫자의 개수는 2개 이상 20개 이하입니다.</li>
  <li>각 숫자는 1 이상 50 이하인 자연수입니다.</li>
  <li>타겟 넘버는 1 이상 1000 이하인 자연수입니다.</li>
</ol>

<h2 id="서론">서론</h2>

<p>일단 프로그래머스에서는 이 문제를 DFS / BFS 문제로 설정해 놓았다. 당연히, 이렇게 풀 수 있다. 
조합을 만들어서, 선택된 값들을 음수 또는 양수로 바꿔서 Sum을 리턴하면 되는 문제다.
하지만 굳이 풀어보지 않더라도 아마 이 방법은 분명 최적해가 아닐 것이다. (DFS, BFS로 풀지 못한다는 말이 아니다!!) 
내 경험상 많은 경우에, 이런 문제의 최적해는 DP로 풀어야 하는 경우가 많다.</p>

<h2 id="접근-방법">접근 방법</h2>

<p>이 문제는 <strong>동전 거스름돈 문제</strong> 와 유사하다.</p>

<p>일단 각 노드는 양수와 음수만을 가질 수 있으므로</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>양수 부분집합의 합 - 음수 부분집합의 합 = 타겟 넘버
양수 부분집합의 합 + 음수 부분집합의 합 = 주어진 숫자들의 합
</code></pre></div></div>

<p>이렇게 부분집합을 나눌 수 있다.</p>

<p>이 방정식을 풀면</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2 * 양수 부분집합이 합 + (음수 부분집합의 합은 소거된다) = 타겟 넘버 + 주어진 숫자들의 합  
</code></pre></div></div>

<p>이고, 따라서</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>양수 부분집합의 합 = (타겟 넘버 + 주어진 숫자들의 합) / 2 라는 결과를 얻을 수 있다.
</code></pre></div></div>

<p>또한 만약에 조건을 quest = [1,2,3] 이고 targetNumber = 1 인 조건을 생각해 보자.
이를 위 식에 대입해 보면</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>양수 부분집합의 합 = ( 1 + 6 ) / 2 로 3.5
</code></pre></div></div>

<p>3.5가 나오는데 이는 문제의 조건에 위배된다. 당연히 int끼리 더하고 빼는데 어떻게 float이 나오겠는가? 정수를 더하고 빼는데 유리수가 나올 수 없다.
따라서 만약 이런 경우에는 해가 없어서 0을 리턴해야 한다. 이렇게 문제의 조건을 간단하게 양수 부분집합의 합으로만 한정지었다.</p>

<p>이제 DP를 사용할 수 있다.</p>

<h2 id="파이썬-코드">파이썬 코드</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">quest</span><span class="p">,</span> <span class="n">target</span><span class="p">):</span>
    <span class="n">sum_quest</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="n">quest</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">sum_quest</span> <span class="o">&lt;</span> <span class="n">target</span> <span class="ow">or</span> <span class="p">(</span><span class="n">sum_quest</span> <span class="o">+</span> <span class="n">target</span><span class="p">)</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="mi">0</span>

    <span class="n">subset_sum</span> <span class="o">=</span> <span class="p">(</span><span class="n">sum_quest</span> <span class="o">+</span> <span class="n">target</span><span class="p">)</span> <span class="o">//</span> <span class="mi">2</span>
    <span class="n">dp</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">subset_sum</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">dp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>

    <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">quest</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">subset_sum</span><span class="p">,</span> <span class="n">num</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
            <span class="n">dp</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">+=</span> <span class="n">dp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="n">num</span><span class="p">]</span>

    <span class="k">return</span> <span class="n">dp</span><span class="p">[</span><span class="n">subset_sum</span><span class="p">]</span>

</code></pre></div></div>

<p>dp 배열은 각 부분집합의 합이 index가 되는 경우이다. 아까의 예시로 돌아가보자. 즉 quest가 [1, 2, 3]이고 targetNumber가 2일때
dp[0] 은 부분집합의 합이 0이 되는 경우이고, dp[1]은 부분집합의 합이 1이 되는 경우이다. 이런 경우에 8번 라인을 보면 dp[0] = 1이라고 초기화 해 놨는데 이는 당연하다</p>

<p>왜냐하면 부분집합의 합이 0이 되는 경우는 단 한가지, 아무것도 선택하지 않는 경우 하나밖에는 없기 떄문이다.</p>

<p>이제 for 루프로 넘어가보면 quest 배열, 즉 조건 [1, 2, 3] 일때를 계속 설명해보자.</p>

<p>num이 1일때 j는 subset_sum(양수 부분집합의 합) 부터 num - 1 까지 역순회를 한다. j는 4이므로
dp[4] = dp[4- num (즉 3)] ….. dp[1] = dp[1] + dp[1 - num(즉 0)] 이 된다. 이는 부분집합의 합이 1인 경우는 부분집합의 합이 [0]이 되는 경우에 1을 더하는 것으로. num이 1일때만 가능하다. 이는 동전 거스르기 문제와 비슷하다고 할 수 있다.</p>

<p>dp[j]를 “j원을 거슬러주는 방법의 수”라고 생각해보자. 그리고 주어진 숫자들을 각각 “동전”이라고 생각했을때 이제 이 “동전”들을 사용하여 “j원”을 만드는 방법의 수를 찾는 것이다.</p>

<p>dp[j]에 dp[j - num]을 더하는 것은, “j원”을 만드는 방법에 “j - num원”을 만드는 방법을 추가하는 것으로 이는 “num원 짜리 동전”을 추가로 사용하여 “j원”을 만드는 새로운 방법을 찾는 것을 의미한다.</p>

<h2 id="자바-풀이">자바 풀이</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">quest</span><span class="o">,</span> <span class="kt">int</span> <span class="n">target</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">sumQuest</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">:</span> <span class="n">quest</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">sumQuest</span> <span class="o">=</span> <span class="n">sumQuest</span> <span class="o">+</span> <span class="n">i</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kt">int</span> <span class="n">subsetSum</span> <span class="o">=</span> <span class="o">(</span><span class="n">sumQuest</span> <span class="o">+</span> <span class="n">target</span><span class="o">)</span> <span class="o">/</span> <span class="mi">2</span><span class="o">;</span>
        <span class="kt">int</span> <span class="n">dp</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">subsetSum</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
        <span class="n">dp</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span> <span class="o">:</span> <span class="n">quest</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">subsetSum</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">num</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span> <span class="c1">// j &gt;= num으로 변경</span>
                <span class="n">dp</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">dp</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">+</span> <span class="n">dp</span><span class="o">[</span><span class="n">j</span> <span class="o">-</span> <span class="n">num</span><span class="o">];</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">dp</span><span class="o">[</span><span class="n">subsetSum</span><span class="o">];</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[]</span> <span class="n">quest</span> <span class="o">=</span> <span class="o">{</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">};</span>
        <span class="kt">int</span> <span class="n">targetNumber</span> <span class="o">=</span> <span class="mi">4</span><span class="o">;</span>
        <span class="nc">Solution</span> <span class="n">sol</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Solution</span><span class="o">();</span> <span class="c1">// Solution 클래스의 인스턴스 생성</span>
        <span class="kt">int</span> <span class="n">answer</span> <span class="o">=</span> <span class="n">sol</span><span class="o">.</span><span class="na">solution</span><span class="o">(</span><span class="n">quest</span><span class="o">,</span><span class="n">targetNumber</span><span class="o">);</span> <span class="c1">// 인스턴스 메소드 호출</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">answer</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>ash tensor</name></author><category term="PS" /><category term="DP" /><category term="파이썬" /><category term="프로그래머스" /><category term="JAVA" /><summary type="html"><![CDATA[[프로그래머스][PS] 타겟 넘버 :: LEVEL 2 (DP 풀이)]]></summary></entry><entry><title type="html">[JAVA] 중첩 클래스</title><link href="http://localhost:4000/java/2024/01/12/nestedclass.html" rel="alternate" type="text/html" title="[JAVA] 중첩 클래스" /><published>2024-01-12T00:00:00+09:00</published><updated>2024-01-12T00:00:00+09:00</updated><id>http://localhost:4000/java/2024/01/12/nestedclass</id><content type="html" xml:base="http://localhost:4000/java/2024/01/12/nestedclass.html"><![CDATA[<p>자바의 중첩 클래스(Nested Class)는 다른 클래스 내부에 정의된 클래스를 말한다. 중첩 클래스는 외부 클래스의 멤버로 간주되고, 외부 클래스의 멤버 변수 및 메서드에 쉽게 접근할 수 있다. 보통 논리적으로 관련된 클래스를 그룹화하는데 사용된다.</p>

<p><strong>상속과 같은 개념의 확장 관계는 아니지만 어떤 개념의 상하관계를 개념적으로 구현해야 하는 경우에 사용되는데</strong> 예를 들어서 국적 또는 국민은 국가라는 개념의 확장이 아니므로 상속 관계로 표현이 불가능하기 때문이다.</p>

<p>구현 포인트는 다음과 같다.</p>

<ol>
  <li>
    <p>예시 코드에서 Korean 및 American, NorthKorean 은 각 국가의 중첩 클래스로 작성하였다. Korean.Korean, US.American은 인터페이스 <strong>ILibertyToMove</strong>의 구현체이기 때문에 <strong>tourAbroad(Nation nation) 및 submittingPassport 메소드</strong>가 존재하기 때문에 여행이 가능하고, NorthKorea.NorthKorean은 구현체가 아니라 해외 여행 및 여권 제출이 불가능하다.</p>
  </li>
  <li>
    <p>마찬가지로 Korea, US, NorthKorea 모두 추상 클래스 Nation을 상속받았지만, Korea, US는 인터페이스 <strong>IVisitable</strong>의 구현체이여서 Korea.Korean, US.American이 서로의 국가를 방문 가능하다. 하지만 NorthKorean은 IVisitable의 구현체가 아니기 때문에 타 국가가 해당 국가의 방문이 불가능하다.</p>
  </li>
  <li>
    <p>각 국가는 중첩 클래스로 <strong>.administraionBureau, .ImmigrationBureau</strong>를 가지고(싱글톤이다), 각 Bureau는 추상 클래스인 Bureau를 상속하고, <strong>ImmigrationBureau는 IImmigrationBureau라는 인터페이스</strong>를 상속받아 <strong>visa 메소드와 immigrationScreening 메소드</strong>와 같은 일반적인 Bureau가 아닌 이민청의 일을 할 수 있게 구현했다.</p>
  </li>
</ol>

<p>이번 구현을 통해서 타입 캐스팅을 하며 인터페이스가 왜 필요한지 절실히 깨닫는 계기가 되었다. 구현이 부족한 부분이 많지만 일단 이 정도로 마무리할 생각이다.</p>

<p>자세한 코드는 <a href="https://github.com/Ash-tensor/studyingJava.git">깃허브 주소</a>에 업로드했다.</p>

<h2 id="구현-예시">구현 예시</h2>

<h3 id="main">Main</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">jan11st</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>

        <span class="c1">// 싱글톤이기 때문에 Korea, US, NorthKorea 객체는 생성하지 않아도 됨</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"객체 생성"</span><span class="o">);</span>
        <span class="nc">Korea</span><span class="o">.</span><span class="na">Korean</span> <span class="no">A</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Korea</span><span class="o">.</span><span class="na">Korean</span><span class="o">(</span><span class="s">"한국인"</span><span class="o">,</span> <span class="s">"Male"</span><span class="o">,</span> <span class="s">"KOREA"</span><span class="o">);</span>
        <span class="no">US</span><span class="o">.</span><span class="na">American</span> <span class="no">B</span> <span class="o">=</span> <span class="k">new</span> <span class="no">US</span><span class="o">.</span><span class="na">American</span><span class="o">(</span><span class="s">"미국인"</span><span class="o">,</span> <span class="s">"Female"</span><span class="o">,</span> <span class="s">"US"</span><span class="o">);</span>
        <span class="nc">NorthKorea</span><span class="o">.</span><span class="na">NorthKorean</span> <span class="no">C</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">NorthKorea</span><span class="o">.</span><span class="na">NorthKorean</span><span class="o">(</span><span class="s">"북한인"</span><span class="o">,</span> <span class="s">"Male"</span><span class="o">,</span> <span class="s">"NorthKorea"</span><span class="o">);</span>

        <span class="no">A</span><span class="o">.</span><span class="na">birthRegistration</span><span class="o">();</span>
        <span class="no">B</span><span class="o">.</span><span class="na">birthRegistration</span><span class="o">();</span>
        <span class="no">C</span><span class="o">.</span><span class="na">birthRegistration</span><span class="o">();</span>


        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"현재 %s의 위치 : %s\n"</span><span class="o">,</span> <span class="no">A</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="no">A</span><span class="o">.</span><span class="na">region</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"현재 %s의 위치 : %s\n"</span><span class="o">,</span> <span class="no">B</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="no">B</span><span class="o">.</span><span class="na">region</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n* 한국인의 미국 방문 상황 :"</span><span class="o">);</span>

        <span class="no">A</span><span class="o">.</span><span class="na">tourAbroad</span><span class="o">(</span><span class="no">US</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n* 미국인의 한국 방문 상황 :"</span><span class="o">);</span>

        <span class="no">B</span><span class="o">.</span><span class="na">tourAbroad</span><span class="o">(</span><span class="nc">Korea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span>
        <span class="c1">// C는 ILibertyToMove(이동할 자유)를 구현하지 않기 때문에 .tourAbroad 할 수 없다.</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n* 북한 방문 상황 :"</span><span class="o">);</span>

        <span class="c1">// NorthKorea는 IVisitable interface를 구현하지 않기 때문에 방문할 수 없다.</span>
        <span class="no">A</span><span class="o">.</span><span class="na">tourAbroad</span><span class="o">(</span><span class="nc">NorthKorea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span>
        <span class="no">B</span><span class="o">.</span><span class="na">tourAbroad</span><span class="o">(</span><span class="nc">NorthKorea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span>


        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"* 현재 %s의 위치 : %s\n"</span><span class="o">,</span> <span class="no">A</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="no">A</span><span class="o">.</span><span class="na">region</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"* 현재 %s의 위치 : %s\n"</span><span class="o">,</span> <span class="no">B</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="no">B</span><span class="o">.</span><span class="na">region</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\n* Situation Immigration :"</span><span class="o">);</span>

        <span class="no">A</span><span class="o">.</span><span class="na">Immigrate</span><span class="o">(</span><span class="no">US</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="실행-결과">실행 결과</h3>

<p><img src="/img/posts/nestedclass/1.PNG" style="width: 75%" /></p>

<p><img src="/img/posts/nestedclass/2.PNG" style="width: 75%" /></p>

<h3 id="ivisitable-인터페이스">IVisitable 인터페이스</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">jan11st</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IVisitable</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nc">Bureau</span> <span class="nf">visitImmigrationBureau</span><span class="o">();</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="korea-클래스">Korea 클래스</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">jan11st</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.lang.reflect.Array</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="c1">// IVisitable 인터페이스를 구현해야만 Human 객체가 해당 Nation을 방문할 수 있음</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Korea</span> <span class="kd">extends</span> <span class="nc">Nation</span> <span class="kd">implements</span> <span class="nc">Republic</span><span class="o">,</span> <span class="nc">IVisitable</span><span class="o">{</span>

    <span class="c1">// 싱글톤</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">Korea</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Korea</span><span class="o">();</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">NAME</span> <span class="o">=</span> <span class="s">"Republic Of Korea"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">CAPITAL_CITY</span> <span class="o">=</span> <span class="s">"SEOUL"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">REGION</span> <span class="o">=</span> <span class="s">"ASIA"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">LANGUAGE</span> <span class="o">=</span> <span class="s">"KOREAN"</span><span class="o">;</span>

    <span class="c1">//국가 리스트</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Korean</span><span class="o">&gt;</span> <span class="n">civilianList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="kd">private</span> <span class="nf">Korea</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">Korea</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">immigrationRegistration</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="nc">ImmigrationBureau</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">immigrationScreening</span><span class="o">(</span><span class="n">human</span><span class="o">))</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"한국 정부 : 이민 최종 승인"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"한국 정부 : 이민 최종 거절"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ImmigrationBureau</span> <span class="nf">visitImmigrationBureau</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">ImmigrationBureau</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">Bureau</span> <span class="nf">visitAdministartionBureau</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">AdministrationBureau</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
    <span class="o">}</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getNAME</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">Korea</span><span class="o">.</span><span class="na">NAME</span><span class="o">;</span>
    <span class="o">}</span>

<span class="c1">//정부 구현</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">AdministrationBureau</span> <span class="kd">extends</span> <span class="nc">Bureau</span> <span class="o">{</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">AdministrationBureau</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AdministrationBureau</span><span class="o">();</span>
        <span class="kd">private</span> <span class="nf">AdministrationBureau</span><span class="o">()</span> <span class="o">{}</span>
        <span class="kd">public</span> <span class="kd">static</span> <span class="nc">AdministrationBureau</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">birthRegistration</span><span class="o">(</span><span class="nc">Korean</span> <span class="n">korean</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"한국 정부 : %s 출생신고 접수 완료\n"</span><span class="o">,</span> <span class="n">korean</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
            <span class="nc">Korea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">civilianList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">korean</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deathRegistration</span><span class="o">(</span><span class="nc">Korean</span> <span class="n">korean</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">Korea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">civilianList</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">korean</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="c1">//이민청 구현, Bureau 추상클래스를 상속하고, IImmigrationBureau 인터페이스를 구현해 visa 발급,</span>
    <span class="c1">// 이민 신청등의 일(일반 Bureau가 아닌 이민청이 해야하는 일을 구현)</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">ImmigrationBureau</span> <span class="kd">extends</span> <span class="nc">Bureau</span> <span class="kd">implements</span> <span class="nc">IImmigrationBureau</span> <span class="o">{</span>

        <span class="c1">//수교국 리스트를 생성, List는 Nation 추상클래스 받아 모든 Nation이 ListArray에 들어갈 수 있게함</span>

        <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Nation</span><span class="o">&gt;</span> <span class="n">dipolomaticNations</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="no">US</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(),</span> <span class="nc">Korea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span>

        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">ImmigrationBureau</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ImmigrationBureau</span><span class="o">();</span>

        <span class="kd">private</span> <span class="nf">ImmigrationBureau</span><span class="o">()</span> <span class="o">{</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kd">static</span> <span class="nc">ImmigrationBureau</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">visa</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"visa"</span><span class="o">);</span>
            <span class="c1">// 수교국 명단에 있으면 비자주기</span>
<span class="c1">//            human이 IlibertyToMove 구현체이면</span>
            <span class="k">if</span><span class="o">(</span><span class="n">human</span> <span class="k">instanceof</span> <span class="nc">ILibertyToMove</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : 여권 있음\n"</span><span class="o">,</span> <span class="n">human</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
                <span class="nc">ILibertyToMove</span> <span class="n">tourist</span> <span class="o">=</span> <span class="o">(</span><span class="nc">ILibertyToMove</span><span class="o">)</span> <span class="n">human</span><span class="o">;</span>
                <span class="nc">Nation</span> <span class="n">passport</span> <span class="o">=</span> <span class="n">tourist</span><span class="o">.</span><span class="na">passportSubmitting</span><span class="o">();</span>

            <span class="k">for</span><span class="o">(</span><span class="nc">Nation</span> <span class="n">nation</span> <span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">dipolomaticNations</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">passport</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">nation</span><span class="o">))</span> <span class="o">{</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 : 수교국 명단에 있음"</span><span class="o">);</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 : 비자 발급 가능"</span><span class="o">);</span>
                    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 : 수교국 명단에 없음"</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 : 비자 발급 불가"</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">immigrationScreening</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">visa</span><span class="o">(</span><span class="n">human</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">human</span> <span class="k">instanceof</span> <span class="nc">IImmigrant</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 :이민심사 승인"</span><span class="o">);</span>
                    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 :이민심사 거절"</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

<span class="c1">//    Korean은 Human이고 이동할 수 있는 자유가 있음</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Korean</span> <span class="kd">extends</span> <span class="nc">Human</span> <span class="kd">implements</span> <span class="nc">ILibertyToMove</span><span class="o">{</span>
        <span class="nc">Boolean</span> <span class="n">died</span><span class="o">;</span>
        <span class="nc">Nation</span> <span class="n">nationality</span><span class="o">;</span>

        <span class="kd">public</span> <span class="nf">Korean</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">sex</span><span class="o">,</span> <span class="nc">String</span> <span class="n">region</span><span class="o">)</span> <span class="o">{</span>
            <span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">sex</span><span class="o">,</span> <span class="n">region</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : %s 출생\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">region</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">birthRegistration</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">Bureau</span> <span class="n">administrationBureau</span> <span class="o">=</span> <span class="nc">Korea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">visitAdministartionBureau</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : %s 한국 행정센터 방문\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">region</span><span class="o">);</span>
            <span class="nc">AdministrationBureau</span> <span class="n">koreaAdministartionBureau</span> <span class="o">=</span> <span class="o">(</span><span class="nc">AdministrationBureau</span><span class="o">)</span> <span class="n">administrationBureau</span><span class="o">;</span>
            <span class="n">koreaAdministartionBureau</span><span class="o">.</span><span class="na">birthRegistration</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">nationality</span> <span class="o">=</span> <span class="nc">Korea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">death</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">died</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">tourAbroad</span><span class="o">(</span><span class="nc">Nation</span> <span class="n">nation</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">nation</span> <span class="k">instanceof</span> <span class="nc">IVisitable</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : %s 방문 가능.\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">nation</span><span class="o">.</span><span class="na">getNAME</span><span class="o">());</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : %s 도착\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">nation</span><span class="o">.</span><span class="na">getNAME</span><span class="o">());</span>
                <span class="nc">IVisitable</span> <span class="n">travelDestination</span> <span class="o">=</span> <span class="o">(</span><span class="nc">IVisitable</span><span class="o">)</span> <span class="n">nation</span><span class="o">;</span>

                <span class="nc">Bureau</span> <span class="n">immigrationBureau</span> <span class="o">=</span> <span class="n">travelDestination</span><span class="o">.</span><span class="na">visitImmigrationBureau</span><span class="o">();</span>

                <span class="k">if</span> <span class="o">(</span><span class="n">immigrationBureau</span> <span class="k">instanceof</span> <span class="nc">IImmigrationBureau</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">IImmigrationBureau</span> <span class="nc">IBureau</span> <span class="o">=</span> <span class="o">(</span><span class="nc">IImmigrationBureau</span><span class="o">)</span> <span class="n">immigrationBureau</span><span class="o">;</span>

                    <span class="k">if</span><span class="o">(</span><span class="nc">IBureau</span><span class="o">.</span><span class="na">visa</span><span class="o">(</span><span class="k">this</span><span class="o">))</span> <span class="o">{</span>
                        <span class="k">this</span><span class="o">.</span><span class="na">region</span> <span class="o">=</span> <span class="n">nation</span><span class="o">.</span><span class="na">getNAME</span><span class="o">();</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span><span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : 목적지는 방문할 수 없다.\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="nc">Nation</span> <span class="nf">passportSubmitting</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : 여권 제출.\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
            <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">nationality</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">Immigrate</span><span class="o">(</span><span class="nc">Nation</span> <span class="n">nation</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">nation</span> <span class="k">instanceof</span> <span class="nc">IVisitable</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">IVisitable</span> <span class="n">targetNation</span> <span class="o">=</span> <span class="o">(</span><span class="nc">IVisitable</span><span class="o">)</span> <span class="n">nation</span><span class="o">;</span>

                <span class="nc">Bureau</span> <span class="n">targetNationBureau</span> <span class="o">=</span> <span class="n">targetNation</span><span class="o">.</span><span class="na">visitImmigrationBureau</span><span class="o">();</span>
                <span class="nc">IImmigrationBureau</span> <span class="n">targetNationImmigrationBureau</span> <span class="o">=</span> <span class="o">(</span><span class="nc">IImmigrationBureau</span><span class="o">)</span> <span class="n">targetNationBureau</span><span class="o">;</span>
                <span class="n">targetNationImmigrationBureau</span><span class="o">.</span><span class="na">immigrationScreening</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>

            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="iimmigrationbureau-인터페이스">IImmigrationBureau 인터페이스</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">jan11st</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IImmigrationBureau</span> <span class="o">{</span>
    <span class="kt">boolean</span> <span class="nf">visa</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">);</span>
    <span class="kt">boolean</span> <span class="nf">immigrationScreening</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="northkorea-클래스">NorthKorea 클래스</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">jan11st</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.lang.reflect.Array</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="c1">//NorthKorea는 IVisitable의 구현체가 아니기 때문에 방문할 수 없음.</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">NorthKorea</span> <span class="kd">extends</span> <span class="nc">Nation</span> <span class="kd">implements</span> <span class="nc">Dictatorship</span><span class="o">{</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">NorthKorea</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">NorthKorea</span><span class="o">();</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">NAME</span> <span class="o">=</span> <span class="s">"Democratic People\'s Republic of Korea"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">CAPITAL_CITY</span> <span class="o">=</span> <span class="s">"PYEONGYANG"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">REGION</span> <span class="o">=</span> <span class="s">"ASIA"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">LANGUAGE</span> <span class="o">=</span> <span class="s">"KOREAN"</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">NorthKorean</span><span class="o">&gt;</span> <span class="n">civilianList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="kd">private</span> <span class="nf">NorthKorea</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

    <span class="c1">// NorthKorean은 ILibertyToMove의 구현체가 아니기 때문에</span>
    <span class="c1">// tourAborad와 submittingPassport 메소드가 없음</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">NorthKorea</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">immigrationRegistration</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="nc">ImmigrationBureau</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">immigrationScreening</span><span class="o">(</span><span class="n">human</span><span class="o">))</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"NorthKorean immigration Bureau : immigration Accepted"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"NorthKorean immigratoin Bureau : immigration Disaccepted"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getNAME</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">NorthKorea</span><span class="o">.</span><span class="na">NAME</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">Bureau</span> <span class="nf">visitAdministartionBureau</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">AdministrationBureau</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">AdministrationBureau</span> <span class="kd">extends</span> <span class="nc">Bureau</span> <span class="o">{</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">AdministrationBureau</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AdministrationBureau</span><span class="o">();</span>
        <span class="kd">private</span> <span class="nf">AdministrationBureau</span><span class="o">()</span> <span class="o">{}</span>
        <span class="kd">public</span> <span class="kd">static</span> <span class="nc">AdministrationBureau</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">birthRegistration</span><span class="o">(</span><span class="nc">NorthKorean</span> <span class="n">northKorean</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"북한 정부 : %s 출생신고 접수 완료\n"</span><span class="o">,</span> <span class="n">northKorean</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
            <span class="nc">NorthKorea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">civilianList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">northKorean</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deathRegistration</span><span class="o">(</span><span class="nc">NorthKorean</span> <span class="n">northKorean</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">NorthKorea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">civilianList</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">northKorean</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">ImmigrationBureau</span> <span class="kd">extends</span> <span class="nc">Bureau</span> <span class="kd">implements</span> <span class="nc">IImmigrationBureau</span> <span class="o">{</span>
        <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Nation</span><span class="o">&gt;</span> <span class="n">dipolomaticNations</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">();</span>

        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">ImmigrationBureau</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ImmigrationBureau</span><span class="o">();</span>

        <span class="kd">private</span> <span class="nf">ImmigrationBureau</span><span class="o">()</span> <span class="o">{</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kd">static</span> <span class="nc">ImmigrationBureau</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">visa</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"visa"</span><span class="o">);</span>
            <span class="c1">// 수교국 명단에 있으면 비자주기</span>

            <span class="k">if</span><span class="o">(</span><span class="n">human</span> <span class="k">instanceof</span> <span class="nc">ILibertyToMove</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : 여권 있음\n"</span><span class="o">,</span> <span class="n">human</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
                <span class="nc">ILibertyToMove</span> <span class="n">tourist</span> <span class="o">=</span> <span class="o">(</span><span class="nc">ILibertyToMove</span><span class="o">)</span> <span class="n">human</span><span class="o">;</span>
                <span class="nc">Nation</span> <span class="n">passport</span> <span class="o">=</span> <span class="n">tourist</span><span class="o">.</span><span class="na">passportSubmitting</span><span class="o">();</span>

                <span class="k">for</span><span class="o">(</span><span class="nc">Nation</span> <span class="n">nation</span> <span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">dipolomaticNations</span><span class="o">)</span> <span class="o">{</span>
<span class="c1">//                if(human instanceof ILibertyToMove) {</span>
<span class="c1">//                    System.out.printf("%s : 여권 있음\n", human.name);</span>
<span class="c1">//                    ILibertyToMove tourist = (ILibertyToMove) human;</span>
<span class="c1">//                    Nation passport = tourist.passportSubmitting();</span>

                    <span class="k">if</span> <span class="o">(</span><span class="n">passport</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">nation</span><span class="o">))</span> <span class="o">{</span>
                        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 : 수교국 명단에 있음"</span><span class="o">);</span>
                        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 : 비자 발급 가능"</span><span class="o">);</span>
                        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 : 수교국 명단에 없음"</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 : 비자 발급 불가"</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">immigrationScreening</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">visa</span><span class="o">(</span><span class="n">human</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">human</span> <span class="k">instanceof</span> <span class="nc">IImmigrant</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 :이민심사 승인"</span><span class="o">);</span>
                    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"이민청 :이민심사 거절"</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">NorthKorean</span> <span class="kd">extends</span> <span class="nc">Human</span><span class="o">{</span>
        <span class="nc">Boolean</span> <span class="n">died</span><span class="o">;</span>
        <span class="nc">Nation</span> <span class="n">nationality</span><span class="o">;</span>

        <span class="kd">public</span> <span class="nf">NorthKorean</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">sex</span><span class="o">,</span> <span class="nc">String</span> <span class="n">region</span><span class="o">)</span> <span class="o">{</span>
            <span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">sex</span><span class="o">,</span> <span class="n">region</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : %s Born\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">region</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">birthRegistration</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">Bureau</span> <span class="n">administrationBureau</span> <span class="o">=</span> <span class="nc">NorthKorea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">visitAdministartionBureau</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : visit %s Administration Bureau\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">region</span><span class="o">);</span>
            <span class="nc">AdministrationBureau</span> <span class="n">northKoreaAdministartionBureau</span> <span class="o">=</span> <span class="o">(</span><span class="nc">AdministrationBureau</span><span class="o">)</span> <span class="n">administrationBureau</span><span class="o">;</span>
            <span class="n">northKoreaAdministartionBureau</span><span class="o">.</span><span class="na">birthRegistration</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">nationality</span> <span class="o">=</span> <span class="nc">NorthKorea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">death</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">died</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="human-클래스">Human 클래스</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">jan11st</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">Human</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="nc">String</span> <span class="n">sex</span><span class="o">;</span>
    <span class="nc">String</span> <span class="n">region</span><span class="o">;</span>
    <span class="kd">public</span> <span class="nf">Human</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">sex</span><span class="o">,</span> <span class="nc">String</span> <span class="n">region</span><span class="o">){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">sex</span> <span class="o">=</span> <span class="n">sex</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">region</span> <span class="o">=</span> <span class="n">region</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kt">void</span> <span class="nf">death</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">};</span>

    <span class="kt">void</span> <span class="nf">eat</span><span class="o">()</span> <span class="o">{};</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="us-클래스">US 클래스</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">package</span> <span class="nn">jan11st</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.lang.reflect.Array</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">US</span> <span class="kd">extends</span> <span class="nc">Nation</span> <span class="kd">implements</span> <span class="nc">Republic</span><span class="o">,</span> <span class="nc">IVisitable</span><span class="o">{</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="no">US</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="no">US</span><span class="o">();</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">NAME</span> <span class="o">=</span> <span class="s">"United States Of America"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">CAPITAL_CITY</span> <span class="o">=</span> <span class="s">"WASHINTON"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">REGION</span> <span class="o">=</span> <span class="s">"NA"</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="nc">String</span> <span class="no">LANGUAGE</span> <span class="o">=</span> <span class="s">"ENGLISH"</span><span class="o">;</span>
    <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">American</span><span class="o">&gt;</span> <span class="n">civilianList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

    <span class="kd">private</span> <span class="nf">US</span><span class="o">()</span> <span class="o">{</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="no">US</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">immigrationRegistration</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="nc">ImmigrationBureau</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">immigrationScreening</span><span class="o">(</span><span class="n">human</span><span class="o">))</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"US Government : Immigration Finally Accepted"</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="k">else</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"US Government : Immigration Finally Disaccepted"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getNAME</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="no">US</span><span class="o">.</span><span class="na">NAME</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">ImmigrationBureau</span> <span class="nf">visitImmigrationBureau</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">ImmigrationBureau</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">Bureau</span> <span class="nf">visitAdministartionBureau</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">AdministrationBureau</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">AdministrationBureau</span> <span class="kd">extends</span> <span class="nc">Bureau</span> <span class="o">{</span>
        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">AdministrationBureau</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">AdministrationBureau</span><span class="o">();</span>
        <span class="kd">private</span> <span class="nf">AdministrationBureau</span><span class="o">()</span> <span class="o">{}</span>
        <span class="kd">public</span> <span class="kd">static</span> <span class="nc">AdministrationBureau</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">birthRegistration</span><span class="o">(</span><span class="nc">American</span> <span class="n">american</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"US Administration Bureau : %s \'s birth registration Accepted\n"</span><span class="o">,</span> <span class="n">american</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>

            <span class="no">US</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">civilianList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">american</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">deathRegistration</span><span class="o">(</span><span class="nc">American</span> <span class="n">american</span><span class="o">)</span> <span class="o">{</span>
            <span class="no">US</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">civilianList</span><span class="o">.</span><span class="na">remove</span><span class="o">(</span><span class="n">american</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">ImmigrationBureau</span> <span class="kd">extends</span> <span class="nc">Bureau</span> <span class="kd">implements</span> <span class="nc">IImmigrationBureau</span><span class="o">{</span>
        <span class="kd">private</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Nation</span><span class="o">&gt;</span> <span class="n">dipolomaticNations</span> <span class="o">=</span> <span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="no">US</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(),</span> <span class="nc">Korea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">());</span>

        <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="nc">ImmigrationBureau</span> <span class="no">INSTANCE</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ImmigrationBureau</span><span class="o">();</span>

        <span class="kd">private</span> <span class="nf">ImmigrationBureau</span><span class="o">()</span> <span class="o">{</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kd">static</span> <span class="nc">ImmigrationBureau</span> <span class="nf">getInstance</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="no">INSTANCE</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">visa</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"visa"</span><span class="o">);</span>
            <span class="c1">// 수교국 명단에 있으면 비자주기</span>

            <span class="k">if</span> <span class="o">(</span><span class="n">human</span> <span class="k">instanceof</span> <span class="nc">ILibertyToMove</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : Having Passport \n"</span><span class="o">,</span> <span class="n">human</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
                <span class="nc">ILibertyToMove</span> <span class="n">tourist</span> <span class="o">=</span> <span class="o">(</span><span class="nc">ILibertyToMove</span><span class="o">)</span> <span class="n">human</span><span class="o">;</span>
                <span class="nc">Nation</span> <span class="n">passport</span> <span class="o">=</span> <span class="n">tourist</span><span class="o">.</span><span class="na">passportSubmitting</span><span class="o">();</span>

            <span class="k">for</span><span class="o">(</span><span class="nc">Nation</span> <span class="n">nation</span> <span class="o">:</span> <span class="k">this</span><span class="o">.</span><span class="na">dipolomaticNations</span><span class="o">)</span> <span class="o">{</span>
<span class="c1">//                if(human instanceof ILibertyToMove) {</span>
<span class="c1">//                    System.out.printf("%s : 여권 있음\n", human.name);</span>
<span class="c1">//                    ILibertyToMove tourist = (ILibertyToMove) human;</span>
<span class="c1">//                    Nation passport = tourist.passportSubmitting();</span>

                    <span class="k">if</span> <span class="o">(</span><span class="n">passport</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">nation</span><span class="o">))</span> <span class="o">{</span>
                        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Immigration Bureau : Visa Waiver Program Partner"</span><span class="o">);</span>
                        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Immigration Bureau : Visa Granted"</span><span class="o">);</span>
                        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Immigration Bureau : Not Visa Waiver Program Partner"</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Immigration Bureau : Visa not Granted"</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">immigrationScreening</span><span class="o">(</span><span class="nc">Human</span> <span class="n">human</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">visa</span><span class="o">(</span><span class="n">human</span><span class="o">))</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">human</span> <span class="k">instanceof</span> <span class="nc">IImmigrant</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Immigration Bureau : Immigration Accepted"</span><span class="o">);</span>
                    <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Immigration Bureau : Immigration Disaccepted"</span><span class="o">);</span>
            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">American</span> <span class="kd">extends</span> <span class="nc">Human</span> <span class="kd">implements</span> <span class="nc">ILibertyToMove</span><span class="o">{</span>
        <span class="nc">Boolean</span> <span class="n">died</span><span class="o">;</span>
        <span class="nc">Nation</span> <span class="n">nationality</span><span class="o">;</span>

        <span class="kd">public</span> <span class="nf">American</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="nc">String</span> <span class="n">sex</span><span class="o">,</span> <span class="nc">String</span> <span class="n">region</span><span class="o">)</span> <span class="o">{</span>
            <span class="kd">super</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">sex</span><span class="o">,</span> <span class="n">region</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : %s Born\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">region</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">birthRegistration</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">Bureau</span> <span class="n">administrationBureau</span> <span class="o">=</span> <span class="no">US</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">visitAdministartionBureau</span><span class="o">();</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : visit %s Administration Bureau\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">region</span><span class="o">);</span>
            <span class="nc">AdministrationBureau</span> <span class="nc">USAdministartionBureau</span> <span class="o">=</span> <span class="o">(</span><span class="nc">AdministrationBureau</span><span class="o">)</span> <span class="n">administrationBureau</span><span class="o">;</span>
            <span class="nc">USAdministartionBureau</span><span class="o">.</span><span class="na">birthRegistration</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
            <span class="k">this</span><span class="o">.</span><span class="na">nationality</span> <span class="o">=</span> <span class="nc">Korea</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">death</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">died</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">tourAbroad</span><span class="o">(</span><span class="nc">Nation</span> <span class="n">nation</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">nation</span> <span class="k">instanceof</span> <span class="nc">IVisitable</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : %s can be visited.\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">nation</span><span class="o">.</span><span class="na">getNAME</span><span class="o">());</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : Arrived at %s\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">,</span> <span class="n">nation</span><span class="o">.</span><span class="na">getNAME</span><span class="o">());</span>
                <span class="nc">IVisitable</span> <span class="n">travelDestination</span> <span class="o">=</span> <span class="o">(</span><span class="nc">IVisitable</span><span class="o">)</span> <span class="n">nation</span><span class="o">;</span>

                <span class="nc">Bureau</span> <span class="n">immigrationBureau</span> <span class="o">=</span> <span class="n">travelDestination</span><span class="o">.</span><span class="na">visitImmigrationBureau</span><span class="o">();</span>


                <span class="k">if</span> <span class="o">(</span><span class="n">immigrationBureau</span> <span class="k">instanceof</span> <span class="nc">IImmigrationBureau</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">IImmigrationBureau</span> <span class="nc">IBureau</span> <span class="o">=</span> <span class="o">(</span><span class="nc">IImmigrationBureau</span><span class="o">)</span> <span class="n">immigrationBureau</span><span class="o">;</span>

                    <span class="k">if</span><span class="o">(</span><span class="nc">IBureau</span><span class="o">.</span><span class="na">visa</span><span class="o">(</span><span class="k">this</span><span class="o">))</span> <span class="o">{</span>
                        <span class="k">this</span><span class="o">.</span><span class="na">region</span> <span class="o">=</span> <span class="n">nation</span><span class="o">.</span><span class="na">getNAME</span><span class="o">();</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
            <span class="k">else</span><span class="o">{</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s :Destination is not available to visit.\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="nc">Nation</span> <span class="nf">passportSubmitting</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">"%s : Submit Passport\n"</span><span class="o">,</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">);</span>
            <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">nationality</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name>ash tensor</name></author><category term="JAVA" /><summary type="html"><![CDATA[자바의 중첩 클래스(Nested Class)는 다른 클래스 내부에 정의된 클래스를 말한다. 중첩 클래스는 외부 클래스의 멤버로 간주되고, 외부 클래스의 멤버 변수 및 메서드에 쉽게 접근할 수 있다. 보통 논리적으로 관련된 클래스를 그룹화하는데 사용된다.]]></summary></entry><entry><title type="html">[HTML/JAVASCRIPT] 아주 간단한 버켓리스트 페이지 제작 - 도장찍기 부분 제작 (2/2)</title><link href="http://localhost:4000/web/2024/01/12/bucketlist-stamp.html" rel="alternate" type="text/html" title="[HTML/JAVASCRIPT] 아주 간단한 버켓리스트 페이지 제작 - 도장찍기 부분 제작 (2/2)" /><published>2024-01-12T00:00:00+09:00</published><updated>2024-01-12T00:00:00+09:00</updated><id>http://localhost:4000/web/2024/01/12/bucketlist-stamp</id><content type="html" xml:base="http://localhost:4000/web/2024/01/12/bucketlist-stamp.html"><![CDATA[<p>javascript를 이용해 도장을 찍는 기능을 구현했다. javascript는 동적 웹 페이지를 만들기 위한 프로그래밍 언어로, 웹 브라우저에서 실행된다. 깃허브 페이지는 정적 웹 페이지를 호스팅 하는데 쓰이지만, 동적 서버 코드를 사용하는 것이 아니기 때문에 상관 없다.</p>

<h1 id="완성된-버켓리스트">완성된 버켓리스트</h1>

<iframe src="https://ash-tensor.github.io/bucketlist/" width="100%" height="800"></iframe>

<p>간단한 완료 도장이 찍히는 코드.</p>

<h2 id="코드">코드</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script&gt;
    // 페이지 로드 시 이전 상태 복원
    document.addEventListener("DOMContentLoaded", (event) =&gt; {
    const buckets = document.querySelectorAll(".bucket");
    buckets.forEach((bucket, index) =&gt; {
        // 로컬 스토리지에서 상태 읽기
        const isDone = localStorage.getItem("bucket" + index) === "done";
        if (isDone) {
        bucket.classList.add("done");
        }
    });
    });

    // 버킷 리스트 클릭 이벤트
    const buckets = document.querySelectorAll(".bucket");
    buckets.forEach((bucket, index) =&gt; {
    bucket.addEventListener("click", function () {
        // 클래스 토글
        bucket.classList.toggle("done");

        // 로컬 스토리지에 상태 저장
        if (bucket.classList.contains("done")) {
        localStorage.setItem("bucket" + index, "done");
        } else {
        localStorage.setItem("bucket" + index, "");
        }
    });
    });
&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre></div></div>

<h2 id="코드-설명">코드 설명</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>document.addEventListener("DOMContentLoaded", (event) =&gt; { ... }):
</code></pre></div></div>

<p>이 코드는 웹 페이지의 HTML이 완전히 로드되고 나서 실행된다. 이를 통해 페이지가 로드되자마자 필요한 작업을 수행할 수 있는데, 여기서는 로드되고 난 후, 이전에 저장된 상태를 불러오는 것을 맡고 있다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const buckets = document.querySelectorAll(".bucket");
</code></pre></div></div>

<p>웹 페이지에서 클래스 이름이 “bucket”인 모든 요소를 선택하고, 그 결과를 “buckets”라는 상수에 저장함.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>buckets.forEach((bucket, index) =&gt; { ... })
</code></pre></div></div>

<p>“buckets”라는 변수에 저장된 모든 요소에 대해 작업을 수행함.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const isDone = localStorage.getItem("bucket" + index) === "done";:
</code></pre></div></div>

<p>로컬 스토리지에서 “bucket” + index(인덱스 번호)라는 키를 가진 아이템을 가져와서, 그 값이 “done”인지 확인함.</p>

<p>로컬 스토리지는 웹 브라우저에서 제공하는 간단한 키-값 형태의 클라이언트 측 웹 스토리지 메커니즘이다. 웹 앱에서 데이터를 로컬에 저장하고 나중에 사용자가 페이지를 새로고침하거나 다시 방문할 때도 그 데이터를 유지할 수 있게 한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>if (isDone) { bucket.classList.add("done"); }:
</code></pre></div></div>

<p>만약 위에서 확인한 값이 “done”이라면, 해당 버킷에 “done” 클래스를 추가함.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bucket.addEventListener("click", function () { ... }):
</code></pre></div></div>

<p>이 코드는 각 버킷에 클릭 이벤트 리스너를 추가한다. 이를 통해 사용자가 버킷을 클릭할 때마다 특정 함수가 실행된다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bucket.classList.toggle("done");:
</code></pre></div></div>

<p>클릭 이벤트가 발생하면, 해당 버킷의 클래스 리스트에서done” 클래스를 토글(있으면 제거, 없으면 추가)</p>

<p>if (bucket.classList.contains(“done”)) { localStorage.setItem(“bucket” + index, “done”); } else { localStorage.setItem(“bucket” + index, “”); }:</p>

<p>버킷에 “done” 클래스가 있으면 로컬 스토리지에 “done”이라는 값을 저장하고, 없으면 빈 문자열을 저장한다.</p>

<p>이렇게 페이지 로드 시 웹 브라우저의 로컬 스토리지를 확인하여 버킷 리스트의 상태를 복원하고, 사용자가 버킷을 클릭하여 상태를 변경할 때마다 그 상태를 로컬 스토리지에 저장하는 역할을 해 도장을 찍는 간단한 기능을 구현할 수 있다!</p>

<h2 id="마무리">마무리</h2>

<p>2024년이 시작한지 얼마 안 지났는데, 하루하루가 굉장히 빠르다는 느낌이 든다. 아침에 일어나고 일과가 끝나고 집에 돌아가면 여섯시 - 일곱시 가량인데, 하루하루 목표를 위해서 열심히 달려야 간단하게 제작한 버켓리스트 페이지에 도장을 찍을 수 있을 것 같다.</p>

<p>열심히 해 보자고!</p>]]></content><author><name>ash tensor</name></author><category term="WEB" /><summary type="html"><![CDATA[javascript를 이용해 도장을 찍는 기능을 구현했다. javascript는 동적 웹 페이지를 만들기 위한 프로그래밍 언어로, 웹 브라우저에서 실행된다. 깃허브 페이지는 정적 웹 페이지를 호스팅 하는데 쓰이지만, 동적 서버 코드를 사용하는 것이 아니기 때문에 상관 없다.]]></summary></entry><entry><title type="html">[HTML/JAVASCRIPT] 아주 간단한 버켓리스트 페이지 제작</title><link href="http://localhost:4000/web/2024/01/10/bucketlist.html" rel="alternate" type="text/html" title="[HTML/JAVASCRIPT] 아주 간단한 버켓리스트 페이지 제작" /><published>2024-01-10T00:00:00+09:00</published><updated>2024-01-10T00:00:00+09:00</updated><id>http://localhost:4000/web/2024/01/10/bucketlist</id><content type="html" xml:base="http://localhost:4000/web/2024/01/10/bucketlist.html"><![CDATA[<p>2024년이 시작한지도 벌써 10일이 지나긴 했지만, 새해를 맞아 새해의 목표를 세우는 것은 필요한 것 같다. 막연하게 생각했었던 새해 목표도 구체적으로 정리하고, 일일 목표를 세우기 위해서라도.</p>

<p>그래서 간단한 2024년 버켓리스트 페이지를 제작했다! 제작하면서 기초적인 HTML 태그, javascript, css 지식을 정리할 수 있는 좋은 기회였다.</p>

<h1 id="완성된-버켓리스트">완성된 버켓리스트</h1>

<iframe src="https://ash-tensor.github.io/bucketlist/" width="100%" height="800"></iframe>

<p>기능이라고 할 것도 없이 간단한데, 클릭을 하면 완료 도장이 찍히는 것이다.</p>

<h2 id="코드">코드</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;meta name="viewport" content="width=device-width"&gt;
&lt;title&gt;2024 버킷리스트&lt;/title&gt;
&lt;link href="style.css" rel="stylesheet" type="text/css"&gt;
&lt;style&gt;
    @import url("https://fonts.googleapis.com/css2?family=Hahmlet:wght@300&amp;display=swap");
    * {
    font-family: "Hahmlet", serif;";
    }
    .bg {
    background-image: url('https://s3.ap-northeast-2.amazonaws.com/materials.spartacodingclub.kr/bucketList/bg-grid.png');
    background-position: center;
    background-size: cover;
    margin: auto;
    width: 360px;
    }
    .title {
    background-color: tomato;
    border-radius: 10px;
    color: white;
    text-align: center;
    padding: 4px 14px;
    }

    .msg {
    margin: -5px 0 15px;
    }

    .bucket {
    width : 160px;
    height: 160px;
    background-position: center;
    background-size: cover;
    }

    .img1 {
    background-image: url('https://s3.ap-northeast-2.amazonaws.com/materials.spartacodingclub.kr/bucketList/bucket-red.png');
    }
    .img2 {
    background-image: url('https://s3.ap-northeast-2.amazonaws.com/materials.spartacodingclub.kr/bucketList/bucket-lightred.png');
    }

    .class = 'msg center' {
    color: black !important;
    }

&lt;/style&gt;
&lt;link rel="stylesheet" type="text/css" href="https://s3.ap-northeast-2.amazonaws.com/materials.spartacodingclub.kr/bucketList/sparta-bucket2.css" /&gt;

&lt;/head&gt;

&lt;body class="bg center"&gt;
&lt;h1 class="title"&gt;2024년 신년계획&lt;/h1&gt;
&lt;p class="msg center"&gt;올해 안에 모두 달성하는게&lt;/p&gt;
&lt;p class="msg center"&gt;목표!&lt;/p&gt;
&lt;div class="flex-row wrap"&gt;
    &lt;div class='bucket img1 center'&gt;자바 마스터하기&lt;/div&gt;
    &lt;div class='bucket img2 center'&gt;빅데이터 분석기사 합격하기&lt;/div&gt;
    &lt;div class='bucket img2 center'&gt;취업 뽀개기&lt;/div&gt;
    &lt;div class='bucket img1 center'&gt;운동하기!&lt;/div&gt;
    &lt;div class='bucket img1 center'&gt;알고리즘 통달하기&lt;/div&gt;
    &lt;div class='bucket img2 center'&gt;여유를 가지고 여행하기!&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
    // 페이지 로드 시 이전 상태 복원
    document.addEventListener("DOMContentLoaded", (event) =&gt; {
    const buckets = document.querySelectorAll(".bucket");
    buckets.forEach((bucket, index) =&gt; {
        // 로컬 스토리지에서 상태 읽기
        const isDone = localStorage.getItem("bucket" + index) === "done";
        if (isDone) {
        bucket.classList.add("done");
        }
    });
    });

    // 버킷 리스트 클릭 이벤트
    const buckets = document.querySelectorAll(".bucket");
    buckets.forEach((bucket, index) =&gt; {
    bucket.addEventListener("click", function () {
        // 클래스 토글
        bucket.classList.toggle("done");

        // 로컬 스토리지에 상태 저장
        if (bucket.classList.contains("done")) {
        localStorage.setItem("bucket" + index, "done");
        } else {
        localStorage.setItem("bucket" + index, "");
        }
    });
    });
&lt;/script&gt;
&lt;/body&gt;

&lt;/html&gt;
</code></pre></div></div>

<h2 id="코드-설명">코드 설명</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;meta name="viewport" content="width=device-width"&gt;
    // 뷰포트(viewport)의 너비를 기기의 너비로 설정하여 
    모바일 화면에 최적화된 보기 경험을 제공한다. 
    반응형 웹 디자인을 위해 필요하다.
</code></pre></div></div>

<p>뷰포트(viewport) : 사용자가 웹사이트나 애플리케이션을 통해 볼 수 있는 영역을 의미한다. 쉽게 말해, 사용자의 화면에 실제로 보이는 부분. 예를 들어, 스마트폰이나 태블릿, 랩탑 등 다양한 기기에서 웹사이트를 방문했을 때, 그 기기의 화면 크기에 맞게 보이는 웹페이지의 영역이 뷰포트에 해당한다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@import url("https://fonts.googleapis.com/css2?family=Hahmlet:wght@300&amp;display=swap");
* {
font-family: "Hahmlet", serif;";
}
//구글 폰트를 적용하고 * 즉 모든 요소에 대해서 "Hahmlet" 폰트를 적용함

.bg {
    /* 배경 이미지 및 스타일 설정 */
}
.title {
    /* 타이틀 영역의 배경색, 글자색, 텍스트 정렬 등의 스타일을 정의 */
}
.msg {
    /* 메시지 영역의 스타일을 정의 */
}
.bucket {
    /* 버킷리스트 아이템의 크기 및 배경 이미지 관련 스타일을 정의 */
}
.img1, .img2 {
    /* 특정 버킷리스트 항목에 대한 배경 이미지를 정의 */
}

&lt;body class="bg center"&gt;
    .bg에서 정의한 CSS 스타일과 center 스타일 속성을 사용함. 
    // center 속성은 외부 css 파일에 정의되어 있음

    /* 외부 CSS 시트에 적용된 .center 클래스
    
    .center {
        display: flex; &lt;&lt; 플랙스박스 레이아웃을 적용함
        flex-direction: column; &lt;&lt; 주 축을 column으로 설정
        align-items: center; &lt;&lt; 교차 축에서 중앙 정렬
        justify-content: center; &lt;&lt; 주 축에서 중앙 정렬
    } */
</code></pre></div></div>

<ul>
  <li>플렉스박스(Flexbox) 레이아웃은 CSS3에서 도입된 강력한 레이아웃 도구로, 복잡한 레이아웃을 쉽게 만들 수 있게 해주는 방식. 주로 1차원 레이아웃을 위해 사용되며, 즉, 한 번에 한 축(가로 또는 세로)을 따라 요소를 배치하는 데 최적화되어 있음</li>
</ul>

<p>플렉스박스를 사용하면 요소들 간의 간격과 정렬을 유연하게 조정할 수 있어서, 다양한 화면 크기와 해상도에 대응하는 반응형 웹 디자인을 구현하기 쉽다. 플렉스박스는 특히 요소의 크기가 불명확하거나 동적일 때 유용하며, 복잡한 정렬이나 분배를 단순한 코드로 해결할 수 있게 해 준다.</p>

<p>플렉스박스의 주요 특징:</p>

<ol>
  <li>
    <p><strong>컨테이너와 아이템</strong>: 플렉스 컨테이너(Flex Container) 내부에 플렉스 아이템(Flex Items)들이 배치됨. 컨테이너에 <code class="language-plaintext highlighter-rouge">display: flex;</code> 또는 <code class="language-plaintext highlighter-rouge">display: inline-flex;</code> 속성을 적용함으로써 플렉스박스 레이아웃이 활성화된다.</p>
  </li>
  <li>
    <p><strong>주 축과 교차 축</strong>: 플렉스박스 레이아웃에서는 주 축(Main Axis)과 교차 축(Cross Axis)이라는 두 개의 축이 있다. <code class="language-plaintext highlighter-rouge">flex-direction</code> 속성을 통해 주 축을 설정할 수 있으며, 아이템들은 이 주 축을 따라 배치됨.</p>
  </li>
  <li>
    <p><strong>정렬</strong>: <code class="language-plaintext highlighter-rouge">justify-content</code>, <code class="language-plaintext highlighter-rouge">align-items</code>, <code class="language-plaintext highlighter-rouge">align-self</code> 등의 속성을 통해 아이템들의 수평, 수직 정렬을 쉽게 조절할 수 있음.</p>
  </li>
  <li>
    <p><strong>유연성</strong>: <code class="language-plaintext highlighter-rouge">flex-grow</code>, <code class="language-plaintext highlighter-rouge">flex-shrink</code>, <code class="language-plaintext highlighter-rouge">flex-basis</code> 속성을 사용해 아이템들이 차지하는 공간의 비율을 조절할 수 있으며, 컨테이너의 남은 공간을 아이템들이 어떻게 분배할지 결정할 수 있다.</p>
  </li>
</ol>

<p>플렉스박스 레이아웃은 웹 페이지의 다양한 구성 요소에 유용하게 적용될 수 있으며, 특히 <strong>메뉴, 카드 레이아웃, 그리드 시스템</strong> 등을 만들 때 자주 사용된다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;h1 class="title"&gt;2024년 신년계획&lt;/h1&gt;
</code></pre></div></div>

<p>h1 태그 : 가장 중요한 제목을 나타냄</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;p class="msg center"&gt;올해 안에 모두 달성하는게&lt;/p&gt;
&lt;p class="msg center"&gt;목표!&lt;/p&gt;
</code></pre></div></div>

<p>p 태그 : 문단을 나타냄, msg, center 클래스가 적용되어 있음.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div class="flex-row wrap"&gt;
flex-row, wrap 클래스를 적용한다. flex-row와 wrap은 외부 css 시트에 적용되어 있음

*/ 외부 css 시트에 적용된 .flex-row와 .wrap 클래스

.flex-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
}

.wrap {
    flex-wrap: wrap;
} */
</code></pre></div></div>

<p>div 태그 : &lt;div&gt; 태그는 블록 레벨 컨테이너로, 여기서는 여러 버킷리스트 항목들을 감싸고 있음. class=”flex-row wrap” 속성은 CSS 플렉스박스(flexbox) 레이아웃을 적용하여 항목들을 행(row)으로 정렬하고, 필요한 경우 여러 줄로 감싸(wrap)서 표시한다.</p>

<p>.flex-row</p>

<ol>
  <li>display: flex;: 이 속성은 해당 요소를 플렉스 컨테이너로 만듭니다. 플렉스 아이템들이 플렉스박스 레이아웃을 사용하여 배치됩니다.</li>
  <li>flex-direction: row;: 플렉스 아이템들이 수평 방향(가로)으로 나열되도록 설정합니다.
align-items: center;: 플렉스 아이템들이 교차 축(이 경우에는 세로 축)에서 중앙에 위치하도록 설정합니다.</li>
  <li>justify-content: center;: 플렉스 아이템들이 주 축(이 경우에는 가로 축)에서 중앙에 위치하도록 설정합니다.</li>
</ol>

<p>.wrap</p>

<p>.wrap 클래스는 플렉스 아이템들이 플렉스 컨테이너 내에서 여유 공간이 부족할 때, 다음 줄로 넘어가도록 설정합니다:</p>

<p>flex-wrap: wrap; 이 속성은 플렉스 아이템이 한 줄에 모두 표시될 수 없을 때, 다음 줄로 감싸지도록(줄바꿈) 설정</p>

<p>이 두 클래스가 적용되어 버킷리스트가 한줄에 두 개씩 표시되고, 플렉스 아이템이 한 줄에 표시될 수 없으므로 다음 줄로 감싸지도록(줄바꿈)이 됨</p>

<p>자바스크립트 코드는 다음 포스트에 자세히 정리하겠다.</p>]]></content><author><name>ash tensor</name></author><category term="WEB" /><summary type="html"><![CDATA[2024년이 시작한지도 벌써 10일이 지나긴 했지만, 새해를 맞아 새해의 목표를 세우는 것은 필요한 것 같다. 막연하게 생각했었던 새해 목표도 구체적으로 정리하고, 일일 목표를 세우기 위해서라도.]]></summary></entry><entry><title type="html">[JAVA] 예외처리 - throw, throws, throwable</title><link href="http://localhost:4000/java/2024/01/08/exception.html" rel="alternate" type="text/html" title="[JAVA] 예외처리 - throw, throws, throwable" /><published>2024-01-08T00:00:00+09:00</published><updated>2024-01-08T00:00:00+09:00</updated><id>http://localhost:4000/java/2024/01/08/exception</id><content type="html" xml:base="http://localhost:4000/java/2024/01/08/exception.html"><![CDATA[<h1 id="예외처리">예외처리</h1>

<p>자바는 솔직히 예외처리를 아주 빡빡하게 처리하는 언어다. 다른 언어들이 특정 예외가 일어났을 때를 열거해서 (divideByZero error, Stack overflow error 등) 제외하는 것에 비해서 조금은 특이하다.</p>

<p>물론 C 처럼 예외 처리를 아예 강제하지 않는 언어와 비교하려는 것은 아니다. Python이나 C++, C# 모두 try - catch - finally와 같은 예외 처리를 지원하고, 자바와 사용되는 예약어만 다들 뿐 그 궤는 비슷하다.</p>

<p>하지만 널리 사용되는 언어인 Javascript와 Python에 비교해 봐도, 자바처럼 Checked 에러와 Unchecked 에러를 나눠서 구현을 강제해서 구분하는 언어는 충분히 드물다고 할 수 있다.</p>

<h2 id="checked-error---unchecked-error">Checked Error - Unchecked Error</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class ExceptionExample {
    // 예외를 던질 수 있는 메서드
    public void methodWithThrows() throws CustomException { &lt;&lt; 에러 열거
        System.out.println("메서드에서 예외를 던집니다.");
        throw new CustomException("Custom 예외 발생");
    }

    // 호출하는 코드
    public static void main(String[] args) {
        ExceptionExample example = new ExceptionExample();

        try {
            example.methodWithThrows();
        } catch (CustomException e) {   &lt;&lt; 열거한 에러 처리
            System.out.println("예외를 처리합니다: " + e.getMessage());
        }
    }
}

// CustomException 정의
class CustomException extends Exception {
    public CustomException(String message) {
        super(message);
    }
}
</code></pre></div></div>

<p>여기서 세번째 라인의 throws가 바로 Checked Error를 열거하는 예약어다. 보통 throws 키워드를 설명할 때</p>

<blockquote>
  <blockquote>
    <p>[Throws 키워드는 메소드 선언부 끝에 작성되어 메소드에서 처리하지 않은 예외를 호출한 곳으로 떠넘기는 역할을 합니다.]</p>
  </blockquote>
</blockquote>

<p>라고 설명하는데, 이 말을 처음 들을 때 이해가 쉽지는 않다(고 생각한다).</p>

<p>throws 키워드는 Checked Error를 열거하는 예약어로, 만약 이 메소드를 호출하는 메소드가 있다면 무조건 예외처리를 해야 컴파일이 가능하다는 뜻이다.</p>

<p>즉 위 예시 코드로 설명해 보자면, 예외를 던질 수 있는 메서드에서 customException을 throws 예약어로 열거했으므로 //호출하는 코드 부분에서 무조건적으로</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>catch(CustomException e)
</code></pre></div></div>

<p>부분이 없으면 실행을 아예 거부해버린다.</p>

<p><img src="/img/posts/JAVA/throws.PNG" style="width: 80%" /></p>

<p>이런식으로.</p>

<h2 id="throws가-없는-프로그램">throws가 없는 프로그램</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class ExceptionExample {
    public void methodWithoutThrows() {
        System.out.println("예외 테스트");
        ExceptionExample example = new ExceptionExample();
        example.methodWithoutThrows();
    }

    // 호출하는 코드
    public static void main(String[] args) {
        ExceptionExample example = new ExceptionExample();
        example.methodWithoutThrows();
        }
    }
</code></pre></div></div>

<p>throws를 제거한 코드다. try - catch 문이 없어도 문제 없이 컴파일 가능한 모습을 볼 수 있다. methodWithoutThrows는 예외를 던지지 않으므로 호출하는 코드에서는 예외 처리를 할 필요가 없다.</p>

<p>이렇게 throws를 사용하면 메서드를 사용하는 측에게 어떤 예외가 발생할 수 있는지 명시함으로써 명확한 예외 처리를 유도할 수 있다… 곤 하지만, 솔직히 아무리 문법적으로 강제해도 제대로 하지 않을 사람은 안 한다. 아예 JVM으로 에러를 던져버리는 것이다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// main 메소드 throws

public class Example {
    public static void main(String[] args) throws Exception {
        // 예외가 발생할 수 있는 코드
    }
}
</code></pre></div></div>

<p>이런 식으로, main 메소드에서 throws를 사용하는 것은 에러를 JVM에게 전가한다는 뜻이다. Main 메소드보다 더 상위의 메소드는 JVM밖에는 없기에, 에러를 던져도 JVM은 에러 메시지만 출력하고 프로그램을 종료한다.</p>

<p>main 메서드에서 throws를 사용할 때는 주로 런타임 예외인 RuntimeException 또는 Exception과 같은 일반적인 예외를 사용하며, 이를 통해 예외 처리를 뒷단으로 미루는 경우가 있다.</p>

<blockquote>
  <blockquote>
    <p>[throws &lt;unchecked exception(runtime exception)&gt; 키워드가 붙어있는 메서드는 꼭 try 블록 내부에서 호출되지 않더라도 컴파일이 됩니다. 하지만 매우 문제가 있는 코드입니다.]</p>
  </blockquote>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// RuntimeException throws

public class Example {
    // 예외를 던질 수 있는 메서드
    public static void methodWithThrows() throws RuntimeException {
        System.out.println("메서드에서 예외를 던집니다.");
        throw new RuntimeException("런타임 예외 발생");
    }

    // 호출하는 코드
    public static void main(String[] args) {
        // 메서드 호출 시 try-catch 블록 없음
        methodWithThrows();
        
        // 아래 코드는 실행되지 않음 (Unreachable code 에러 발생)
        System.out.println("메서드 호출 후의 코드");
    }
}
</code></pre></div></div>

<p>위의 코드에서 methodWithThrows는 RuntimeException을 던질 수 있는데, 호출하는 main 메서드에서는 해당 예외를 처리하는 try-catch 블록이 없다. 그러나 컴파일은 문제없이 진행된다.</p>

<p>하지만 실행 시에는 methodWithThrows에서 발생한 예외가 main 메서드로 전파되어, “Unreachable code” 에러가 발생하면서 프로그램이 비정상적으로 종료된다.</p>]]></content><author><name>ash tensor</name></author><category term="JAVA" /><summary type="html"><![CDATA[예외처리]]></summary></entry><entry><title type="html">[JAVA] 인터페이스와 추상클래스의 차이</title><link href="http://localhost:4000/java/2024/01/07/interface.html" rel="alternate" type="text/html" title="[JAVA] 인터페이스와 추상클래스의 차이" /><published>2024-01-07T00:00:00+09:00</published><updated>2024-01-07T00:00:00+09:00</updated><id>http://localhost:4000/java/2024/01/07/interface</id><content type="html" xml:base="http://localhost:4000/java/2024/01/07/interface.html"><![CDATA[<p>추상 클래스와 인터페이스는 모두 자바에서 객체지향의 원칙 중 추상화를 구현하기 위해 사용되는 개념이지만 몇가지 중요한 차이가 존재한다. 솔직히 내 생각에는, 자바라는 언어가 어쩌면 극단적으로 객체지향을 중시한다는 것을 보여주는 예시라고 생각한다. 파이썬에서는 굳이 인터페이스를 사용하지 않는 경우가 많은 것 같다. “<strong>call</strong>” 처럼 간단한 인터페이스라면 객체를 그냥 파이썬 함수처럼 호출해서 사용하는 경우도 있고.</p>

<p>인터페이스를 배울 때 (적어도 나는) 추상 클래스와는 다르게 다중 상속이 가능하다는 것이 기억나는데 이는 객체지향에 익숙하지 않으면 추상 클래스와 인터페이스가 어떤 일을 하는지 정확히 이해하기 힘들기 때문이라고 생각한다.</p>

<h1 id="인터페이스">인터페이스</h1>

<p>인터페이스는 추상 클래스와는 별도로 <strong>구현 객체가 같은 동작을 한다는 것을 보장하기 위해 초점을 두는 것이 추상 클래스와는 다르다.</strong> 예를 들어서, 리모컨이라는 추상 클래스가 존재한다고 할 때, TV리모컨과 에어컨 리모컨은 하는 역할이 다를 것이다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>abstract class RemoteControl {
    abstract void turnOn();
    abstract void turnOff();
    abstract void volumeUp(); &lt;&lt; 에어컨 리모컨에서는 구현할 수 없다.
}

class TVRemote extends RemoteControl {
    void turnOn();
    void turnOff();
    void volumeUp();
}

class AirconditionerRemote extends RemoteControl {
    void turnOn();
    void turnOff();
    void volumeUp(); &lt;&lt; 구현할 수 없음
}
</code></pre></div></div>

<p>이런 경우에 인터페이스를 사용하는 것이다. 공통적인 기능의 보장! TurnOn과 TurnOff는 공통적인 기능이므로, 이런 식으로 구현이 될 수 있겠다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Interface Volume {
    void volumeUp();
    void volumeDown();
}

class TVRemote extends RemoteControl implements Volume {
    void turnOn();
    void turnOff();
    void volumeUp();
}
</code></pre></div></div>

<p>이렇게 동작의 메서드를 각각 인터페이스마다 분리하여 설계함으로서 조금 더 구조적이고 더욱 추상적인 객체를 설계할 수 있다.</p>

<h2 id="구현-예제">구현 예제</h2>

<h3 id="iremotecontrolable-인터페이스">IRemoteControlable 인터페이스</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>public interface IRemoteControlable {
void turnOn();
void turnOff();
void channelUp();
void channelDown();
void volumnUp();
void volumnDown();
void putChannel(int value);
}
</code></pre></div></div>

<h3 id="controller-클래스">Controller 클래스</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>package jan5th;
import java.util.Scanner;

public class Controller implements IRemoteControlable {
    Television model;

    public Controller(Television model){
        this.model = model;
    }

    public boolean analyzer(int value, Scanner hand){

//"1. TV 켜기, 2. TV 끄기, 3. 채널 올리기, 4. 채널 내리기, " +
//"5. 볼륨 올리기, 6. 볼륨 내리기, 7. 특정 채널로 이동, 0. 종료";
        
        switch (value){

            case 1:{
                this.turnOn();
                break;
            }
            case 2: {
                this.turnOff();
                break;
            }
            case 3 : {
                this.channelUp();
                break;
            }
            case 4 : {
                this.channelDown();
                break;
            }
            case 5 : {
                this.volumnUp();
                break;
            }
            case 6 : {
                this.volumnDown();
                break;
            }
            case 7 : {
                System.out.println("입력할 채널을 선택해주세요");
                int inputedChannel = hand.nextInt();
                this.putChannel(inputedChannel);
                break;
            }
            case 0 : {
                System.out.println("TV를 그만 봅니다.");
                return false;
            }
        }
        return true;
    }

    public void turnOn() {
        model.on = true;
        System.out.println("TV 전원 : ON");
    }

    @Override
    public void turnOff() {
        model.on = false;
        System.out.println("TV 전원 : OFF");
    }

    @Override
    public void channelUp() {
        if(model.on == false) {
            System.out.println("TV STATE : OFF");
        }
        else {
            model.channel += 1;
            System.out.printf("현재 채널 : %d\n", model.channel);
        }
    }

    @Override
    public void channelDown() {
        if(model.on == false) {
            System.out.println("TV STATE : OFF");
        }
        else {
            if (model.channel == 1) {
                System.out.println("0번 채널은 없습니다.");
            } else {
                model.channel -= 1;
                System.out.printf("현재 채널 : %d\n", model.channel);
            }
        }
    }
    @Override
    public void volumnUp() {
        if(model.on == false) {
            System.out.println("TV STATE : OFF");
        }
        else {
            model.volume += 1;
            System.out.printf("현재 볼륨 : %d\n", model.volume);
        }
    }

    @Override
    public void volumnDown() {
        if(model.on == false) {
            System.out.println("TV STATE : OFF");
        }
        else {
            if (model.volume == 0) {
                System.out.println("볼륨을 0 아래로 내릴 수 없습니다.");
            } else {
                model.volume -= 1;
                System.out.printf("현재 볼륨 : %d\n", model.volume);
            }
        }
    }
    @Override
    public void putChannel(int value) {
        if(model.on == false) {
            System.out.println("TV STATE : OFF");
        }
        else {
            if (value &lt;= 0) {
                System.out.println("그런 채널은 없습니다.");
            } else {
                model.channel = value;
                System.out.printf("현재 채널 : %d\n", model.channel);
            }
        }
    }
}
</code></pre></div></div>

<h3 id="human-클래스">Human 클래스</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>package jan5th;

import java.util.Scanner;

public class Human {
    Controller model;

    public Human(Controller controller){
        this.model = controller;
    }
    void input(Scanner Hand){
        boolean condition = true;
        while(condition){
            System.out.println("1. TV 켜기, 2. TV 끄기, 3. 채널 올리기, 4. 채널 내리기, " +
                    "5. 볼륨 올리기, 6. 볼륨 내리기, 7. 특정 채널로 이동, 0. 종료");
            int value = Hand.nextInt();
            condition = this.model.analyzer(value, Hand);
        }
    }
}
</code></pre></div></div>

<h3 id="메인-클래스">메인 클래스</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>package jan5th;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Television appleTV = new Television();
        Controller appleTVController = new Controller(appleTV);
        Human me = new Human(appleTVController);
        me.input(Hand);
    }
}
</code></pre></div></div>]]></content><author><name>ash tensor</name></author><category term="JAVA" /><summary type="html"><![CDATA[추상 클래스와 인터페이스는 모두 자바에서 객체지향의 원칙 중 추상화를 구현하기 위해 사용되는 개념이지만 몇가지 중요한 차이가 존재한다. 솔직히 내 생각에는, 자바라는 언어가 어쩌면 극단적으로 객체지향을 중시한다는 것을 보여주는 예시라고 생각한다. 파이썬에서는 굳이 인터페이스를 사용하지 않는 경우가 많은 것 같다. “call” 처럼 간단한 인터페이스라면 객체를 그냥 파이썬 함수처럼 호출해서 사용하는 경우도 있고.]]></summary></entry><entry><title type="html">[JAVA] PSVM - public static void main(string[] args)</title><link href="http://localhost:4000/java/2024/01/04/psvm.html" rel="alternate" type="text/html" title="[JAVA] PSVM - public static void main(string[] args)" /><published>2024-01-04T00:00:00+09:00</published><updated>2024-01-04T00:00:00+09:00</updated><id>http://localhost:4000/java/2024/01/04/psvm</id><content type="html" xml:base="http://localhost:4000/java/2024/01/04/psvm.html"><![CDATA[<h1 id="psvm">PSVM</h1>

<p>자바를 즐겨 사용하는 사람도 자바의 코드가 간결함과는 거리가 멀다는 데는 동의할 것이다. 당장 파이썬에서 하는 것처럼 print(“hello world”)를 실행하려고 해도, 아니면 자바를 이어받은 코틀린에서조차</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fun main() {
println("Hello")
}
</code></pre></div></div>

<p>이렇게 간결한데 자바에서는</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class Main {
public static void main(String args[]) {
    System.out.println("Hello");
    }
}
</code></pre></div></div>

<p>이런 식으로 작성해야 될 정도고, 저 부분을 수정하면</p>

<p><img src="/img/posts/PSVM.PNG" style="width: 80%" /></p>

<p>이렇게 아예 IDE에서부터 프로그램을 실행할 수 없다고 말해버린다. 이렇듯 자바는 public static final 처럼 문법적으로 꼭 필요한 서식과 문법적 구조가 너무 늘어진다. 그렇다보니 PS에서는 자바를 그다지 사용하지 않는 것 같다. 당연히 느려서 그런 것도 있겠지만, 똑같이 엄청 느린 파이썬을 많이 사용하는 걸 보면 꼭 그런것 만은 아닌 것 같다.</p>

<p>그런데 왜 자바에서는 PSVM string args를 써야하는 걸까?</p>

<h2 id="public">public</h2>

<p>public은 접근 제어자이다. 자바는 프로그램의 시작을 Main 메소드에서 시작한다. 그러므로 어디에서든 접근해야 하기 때문에 public으로 선언하는 것은 당연하다.</p>

<h2 id="static">static</h2>

<p>자바에서 static 키워드는 많은 용도로 사용되는데, 정적 변수(Static Variable)과 정적 메서드(Static Method)가 대표적이다. 그리고 PSVM을 무조건 사용해야 되는 이유도 바로 여기에 있다. 
정적 변수는 클래스가 메모리에 로드 될 때 생성되며 <strong>정적 영역</strong>에 적재된다. 정적 변수는 클래스 이름을 통해 접근할 수 있으며 (ex: Integer.MAX_VALUE) 객체를 생성하지 않아도 된다. 정적 메서드도 똑같은데, 정적 메서드 역시 클래스 이름을 통해 직접 호출할 수 있고, <strong>인스턴스의 변수나 인스턴스의 메서드를 직접 사용하거나 호출할 수 없다.</strong>
오로지 정적 변수나 정적 메서드만 호출할 수 있다. 이 정적 메서드의 가장 대표적인 메서드가 바로 메인 메서드다.</p>

<p>이 때문에 자바의 메인 메서드에는 public static void main(string[] args) 를 적어야 하는데, 자바의 메인 메서드는 객체를 생성하지 않고 실행되어야 하기 때문에 static, 즉 정적 메서드여야 하는 것이다.</p>

<p>우리가 자바를 사용할 때, Main 클래스를 인스턴스해서, 예를 들어서</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Main classMain = new Main(args[]);
classMain.main();
</code></pre></div></div>

<p>이런 식으로 터미널에 작성해서 실행하지는 않으니까.</p>

<p>그리고 인스턴스의 변수나 인스턴스의 메서드를 직접 사용하거나 호출할 수 없는데 내 기억에 가장 깊게 남아있는 예시가 있다. 23년 정보처리기사 3회 자바 문제인데</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// 에러가 나는 라인을 고르시오
class Person(
    private String name;
    public Person(String val) {
        name = val;
    }
    public static String get() {
        return name;
    }
    public void print() {
        System.out.println(name);
    }
)

public class Engineer {
    public static void main(string[] args) {
        Person obj = new Person("Kim");
        obj.print();
    }
}
</code></pre></div></div>

<p>이런 문제였다. 여기서는 7번 라인, <strong>return name</strong> 부분에서 에러가 나는데, 이는 get()이라는 메서드가 static 메서드이기 때문에, 2번 라인에서 선언된 private String name 이라는 인스턴스 변수를 참조할 수 없기 때문에 에러가 나는 것이다.</p>

<p>어디서 에러가 날 지 찾으라는 문제가 나올 거라고는 생각을 하지 못해서 시험장에서 꽤 당황했었던 기억이 난다.</p>]]></content><author><name>ash tensor</name></author><category term="JAVA" /><summary type="html"><![CDATA[PSVM]]></summary></entry></feed>